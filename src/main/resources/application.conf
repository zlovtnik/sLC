app {
  name = "Health Check and Log Aggregator"
  version = "0.1.0"

  health-check {
    endpoints = [
      "http://localhost:8080/api",
      "http://localhost:8081/api",
      "http://localhost:8082/api"
    ]
    interval = 30s
    timeout = 10s
    connectivity-url = "https://www.google.com"
    parallelism = 4
  }

  log-aggregation {
    sources = [
      "logs/application.log",
      "logs/error.log",
      "/var/log/myapp/*.log"
    ]
    max-entries = 1000
    max-log-file-size = 100 MiB    # HOCON supports byte-size units
    # Directory where aggregated logs are persisted
    persist-dir = "persisted-logs"
  }

  server {
    host = "0.0.0.0"
    port = 9090
  }

  logging {
    level = "INFO"
    file = "logs/health-check-app.log"
  }

  redis {
    host = ${?REDIS_HOST}"localhost"
    port = ${?REDIS_PORT}6379
    password = ${?REDIS_PASSWORD}
    database = ${?REDIS_DATABASE}0
    timeout = ${?REDIS_TIMEOUT}"5s"
    username = ${?REDIS_USERNAME}
  }
  

  zio {
    logger {
      filter {
        rootLevel = INFO
        mappings {
          "com.rcs.healthcheck" = DEBUG
          "zio" = INFO
        }
      }
    }
  }
}